leetcode

104. 二叉树的最大深度
给定一个二叉树，找出其最大深度。

二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。

说明: 叶子节点是指没有子节点的节点。

示例：
给定二叉树 [3,9,20,null,null,15,7]，

    3
   / \
  9  20
    /  \
   15   7
返回它的最大深度 3 。

#使用后序遍历的方法遍历二叉树
class TreeNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None
class Solution:
    def maxDepth(self, root):
        if root is None:    # 如果当前节点是空节点  返回0
            return 0
        else:
            left_height = self.maxDepth(root.left)   #递归 返回左子树深度
            right_height = self.maxDepth(root.right)  #递归 返回右子树深度
            return max(left_height, right_height) + 1   #比较左右深度  +1

